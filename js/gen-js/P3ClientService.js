//
// Autogenerated by Thrift Compiler (0.8.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

P3ClientService_sendData_args = function(args) {
  this.data = null;
  this.appId = null;
  this.appSecret = null;
  if (args) {
    if (args.data !== undefined) {
      this.data = args.data;
    }
    if (args.appId !== undefined) {
      this.appId = args.appId;
    }
    if (args.appSecret !== undefined) {
      this.appSecret = args.appSecret;
    }
  }
};
P3ClientService_sendData_args.prototype = {};
P3ClientService_sendData_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.data = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new Data();
          elem6.read(input);
          this.data.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.appId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.appSecret = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

P3ClientService_sendData_args.prototype.write = function(output) {
  output.writeStructBegin('P3ClientService_sendData_args');
  if (this.data) {
    output.writeFieldBegin('data', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.data.length);
    for (var iter7 in this.data)
    {
      if (this.data.hasOwnProperty(iter7))
      {
        iter7 = this.data[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.appId) {
    output.writeFieldBegin('appId', Thrift.Type.STRING, 2);
    output.writeString(this.appId);
    output.writeFieldEnd();
  }
  if (this.appSecret) {
    output.writeFieldBegin('appSecret', Thrift.Type.STRING, 3);
    output.writeString(this.appSecret);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

P3ClientService_sendData_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
P3ClientService_sendData_result.prototype = {};
P3ClientService_sendData_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

P3ClientService_sendData_result.prototype.write = function(output) {
  output.writeStructBegin('P3ClientService_sendData_result');
  if (this.success) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

P3ClientServiceClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
P3ClientServiceClient.prototype = {};
P3ClientServiceClient.prototype.sendData = function(data, appId, appSecret) {
  this.send_sendData(data, appId, appSecret);
  return this.recv_sendData();
};

P3ClientServiceClient.prototype.send_sendData = function(data, appId, appSecret) {
  this.output.writeMessageBegin('sendData', Thrift.MessageType.CALL, this.seqid);
  var args = new P3ClientService_sendData_args();
  args.data = data;
  args.appId = appId;
  args.appSecret = appSecret;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

P3ClientServiceClient.prototype.recv_sendData = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new P3ClientService_sendData_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'sendData failed: unknown result';
};
